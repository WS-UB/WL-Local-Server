from MQTT_Handler import MQTTHandler
import threading
from paho.mqtt import client as mqtt_client
import datetime
import re
import random
import string
import pandas as pd

BROKER = "128.205.218.189"
PORT = 1883
TOPIC = "/csi-2"
CLIENT_ID_WIFI = "".join(random.choices((string.ascii_letters + string.digits), k=6))


def run():
    wifi_Handler = MQTTHandler(CLIENT_ID_WIFI, BROKER, PORT, TOPIC)
    client_wifi = wifi_Handler.connect_mqtt()
    wifi_data = f"MAC: [126, 30, 107, 64, 43, 117], RSSI: -79, Channel: 155, BW: 80, csi_i: [783.0, 47284.0, 0.0, 11619.0, 15870.0, 13308.0, 14942.0, 4284.0, 1691.0, 2049.0, 13180.0, 13486.0, 15609.0, 10755.0, 13132.0, 15551.0, 14140.0, 16120.0, 12732.0, 12748.0, 6238.0, 4990.0, 5946.0, 575.0, 2907.0, 15097.0, 13817.0, 9913.0, 513.0, 11769.0, 7644.0, 2047.0, 3547.0, 9853.0, 5790.0, 7164.0, 3899.0, 16313.0, 1279.0, 767.0, 1215.0, 1457.0, 5662.0, 12334.0, 14015.0, 1759.0, 9347.0, 14339.0, 12796.0, 2175.0, 33.0, 10685.0, 13438.0, 13753.0, 13820.0, 5371.0, 6202.0, 14270.0, 12889.0, 2945.0, 15678.0, 12606.0, 4700.0, 14846.0, 959.0, 4603.0, 8893.0, 4670.0, 13118.0, 6972.0, 12398.0, 4858.0, 13310.0, 10425.0, 13758.0, 5502.0, 575.0, 14206.0, 12924.0, 7675.0, 6622.0, 11229.0, 1023.0, 4923.0, 16121.0, 8387.0, 9021.0, 2735.0, 15615.0, 1855.0, 13822.0, 8701.0, 2785.0, 511.0, 5501.0, 8195.0, 6524.0, 4796.0, 8893.0, 7866.0, 10499.0, 10685.0, 4604.0, 10553.0, 6653.0, 14841.0, 575.0, 12764.0, 12668.0, 5569.0, 15896.0, 4462.0, 10499.0, 6267.0, 6779.0, 2113.0, 7038.0, 15423.0, 6461.0, 13944.0, 4446.0, 13212.0, 7036.0, 13695.0, 8259.0, 13822.0, 129.0, 15480.0, 129.0, 4545.0, 2367.0, 4286.0, 385.0, 2305.0, 1439.0, 5755.0, 4603.0, 7899.0, 5274.0, 1307.0, 6778.0, 1343.0, 10547.0, 15471.0, 15551.0, 13079.0, 13702.0, 15598.0, 14582.0, 13420.0, 14420.0, 12612.0, 10941.0, 8261.0, 2881.0, 3961.0, 5989.0, 4121.0, 5356.0, 6028.0, 15801.0, 6124.0, 5852.0, 6076.0, 6108.0, 5620.0, 5522.0, 4994.0, 4582.0, 4994.0, 4334.0, 6906.0, 6674.0, 6438.0, 7322.0, 4958.0, 5004.0, 5092.0, 4780.0, 6749.0, 13244.0, 11497.0, 12414.0, 12300.0, 14926.0, 15662.0, 12406.0, 14584.0, 4414.0, 9561.0, 1599.0, 31.0, 6204.0, 4988.0, 8317.0, 4509.0, 4609.0, 2369.0, 4438.0, 7470.0, 7034.0, 4766.0, 7835.0, 5115.0, 5498.0, 9005.0, 15864.0, 12934.0, 12340.0, 15745.0, 13168.0, 12700.0, 12516.0, 13265.0, 12097.0, 10697.0, 12545.0, 11817.0, 12444.0, 13017.0, 12860.0, 13326.0, 13926.0, 14158.0, 9181.0, 12806.0, 16062.0, 14766.0, 8915.0, 1111.0, 831.0, 2127.0, 1043.0, 4779.0, 4147.0, 2727.0, 7795.0, 7531.0, 4254.0, 6226.0, 7818.0, 5322.0, 7500.0, 6460.0, 5356.0, 6253.0, 2377.0, 4225.0, 817.0, 9805.0, 10269.0, 4731.0, 13436.0, 5884.0, 8963.0, 14591.0], csi_r: [3105.0, 45568.0, 182.0, 16372.0, 29619.0, 24624.0, 30132.0, 56307.0, 47604.0, 65459.0, 25652.0, 15093.0, 51186.0, 9204.0, 8245.0, 9139.0, 8243.0, 36914.0, 7732.0, 17717.0, 25652.0, 21555.0, 52275.0, 5107.0, 51700.0, 10291.0, 26610.0, 55283.0, 36852.0, 61425.0, 50612.0, 5108.0, 30708.0, 33780.0, 52.0, 34739.0, 33779.0, 18483.0, 39923.0, 53235.0, 7668.0, 245.0, 5684.0, 26101.0, 20916.0, 2548.0, 55219.0, 36786.0, 2100.0, 29684.0, 31220.0, 7668.0, 8178.0, 19956.0, 12852.0, 28657.0, 38964.0, 58291.0, 2100.0, 17908.0, 14323.0, 15347.0, 13300.0, 57264.0, 1269.0, 65522.0, 13299.0, 19507.0, 33780.0, 21492.0, 4085.0, 59956.0, 13812.0, 60403.0, 13300.0, 24627.0, 40947.0, 60339.0, 3636.0, 34866.0, 28212.0, 10740.0, 53234.0, 63475.0, 21555.0, 4596.0, 17908.0, 2805.0, 24498.0, 5107.0, 7155.0, 48628.0, 18932.0, 2037.0, 20402.0, 35316.0, 11251.0, 17395.0, 22515.0, 48179.0, 10227.0, 4084.0, 18418.0, 50163.0, 15283.0, 27699.0, 28148.0, 6196.0, 14387.0, 48051.0, 23092.0, 35125.0, 8179.0, 35827.0, 41010.0, 8437.0, 8243.0, 28595.0, 29619.0, 63538.0, 20020.0, 1076.0, 14323.0, 5043.0, 8179.0, 38388.0, 24563.0, 41010.0, 38898.0, 52147.0, 30707.0, 30771.0, 9203.0, 57266.0, 19189.0, 27636.0, 10227.0, 11828.0, 54324.0, 61940.0, 51251.0, 6645.0, 1013.0, 11189.0, 181.0, 7862.0, 47350.0, 35766.0, 19574.0, 18486.0, 29494.0, 59702.0, 630.0, 29302.0, 8438.0, 20278.0, 17590.0, 7031.0, 63287.0, 50615.0, 29747.0, 34679.0, 38519.0, 21751.0, 15095.0, 15287.0, 3127.0, 17079.0, 7479.0, 27959.0, 22391.0, 58806.0, 36150.0, 30774.0, 26421.0, 4406.0, 13942.0, 23926.0, 22005.0, 47540.0, 42035.0, 27637.0, 9718.0, 11190.0, 19062.0, 51894.0, 30391.0, 63538.0, 51.0, 58356.0, 22004.0, 10228.0, 14323.0, 38388.0, 2036.0, 1460.0, 38834.0, 4596.0, 25399.0, 14902.0, 33333.0, 7990.0, 12341.0, 28658.0, 54323.0, 23029.0, 37429.0, 1910.0, 30007.0, 10806.0, 35959.0, 36791.0, 64951.0, 13623.0, 25079.0, 17719.0, 60918.0, 42486.0, 58550.0, 17141.0, 46901.0, 33654.0, 6774.0, 5366.0, 21492.0, 43126.0, 40373.0, 61621.0, 16629.0, 10870.0, 33910.0, 13046.0, 3639.0, 39030.0, 37878.0, 1015.0, 54966.0, 23606.0, 39607.0, 53174.0, 16950.0, 17527.0, 14710.0, 11638.0, 25462.0, 33973.0, 10102.0, 34229.0, 758.0, 12790.0, 630.0, 8242.0, 27699.0, 36852.0, 20467.0, 32689.0], fc: 0, n_sub: 256, tx: 3, n_rows: 4, n_cols:4, ap_id: 0, mcs: 0, rx_id: 192.168.48.6, stamp;{datetime.datetime.now()}"

    while True:
        wifi_Handler.publish(client=client_wifi, msg=wifi_data)

    # df_parquet = pd.read_parquet("output.parquet")
    # df_parquet.to_csv("output.csv")


# Convert the matched strings to lists of integers


if __name__ == "__main__":
    # rospy.init_node("gps_publisher", anonymous=True)
    # target_socket = rospy.get_param("/gps_publisher/target_socket")
    # gps_pub = GPSPublisher(target_socket)
    # signal.signal(signal.SIGINT, signal_handler)
    # gps_pub.connect()
    # rospy.spin()

    run()
